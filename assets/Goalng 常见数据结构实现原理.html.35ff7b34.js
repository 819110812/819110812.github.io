import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e}from"./app.6e36811a.js";const t={},i=e(`<h1 id="golang-\u5E38\u89C1\u6570\u636E\u7ED3\u6784\u5B9E\u73B0\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#golang-\u5E38\u89C1\u6570\u636E\u7ED3\u6784\u5B9E\u73B0\u539F\u7406" aria-hidden="true">#</a> Golang \u5E38\u89C1\u6570\u636E\u7ED3\u6784\u5B9E\u73B0\u539F\u7406</h1><h2 id="slice" tabindex="-1"><a class="header-anchor" href="#slice" aria-hidden="true">#</a> Slice</h2><p>\u5207\u7247\u662Fgolang\u4E2D\u5F88\u5E38\u89C1\u7684\u6570\u636E\u7ED3\u6784\u4E4B\u4E00\uFF0C\u5B83\u4F9D\u8D56\u4E8E\u6570\u7EC4\u5B9E\u73B0\uFF0C\u5B83\u53EF\u4EE5\u5F88\u8F7B\u677E\u7684\u5B9E\u73B0\u6269\u5BB9\u3002</p><p>\u5728\u6E90\u7801\u5305<code>runtime/slice.go</code>\u4E2D\u5B9A\u4E49\u4E86\u57FA\u672C\u7684slice\u7ED3\u6784</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> slice <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	array unsafe<span class="token punctuation">.</span>Pointer
	<span class="token builtin">len</span>   <span class="token builtin">int</span>
	<span class="token builtin">cap</span>   <span class="token builtin">int</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>array</code>\u6307\u5411\u5E95\u5C42\u7684\u6570\u7EC4\uFF0C<code>len</code> \u8868\u793A\u5207\u7247\u7684\u957F\u5EA6\uFF0C<code>cap</code>\u8868\u793A\u5207\u7247\u7684\u5BB9\u91CF\u3002 \u7531\u4E8E\u6307\u5411\u4E86\u5E95\u5C42\u6570\u7EC4\uFF0C\u6240\u4EE5<code>slice</code>\u672C\u8D28\u4E0A\u548Cslice\u5171\u4EAB\u4E86\u5B58\u50A8\u7A7A\u95F4\u3002</p><p>\u4E3E\u4E2A\u6817\u5B50\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> array <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token builtin">int</span>

    <span class="token keyword">var</span> slice <span class="token operator">=</span> array<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span>

    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;lenth of slice: &quot;</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;capacity of slice: &quot;</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>slice<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token operator">&amp;</span>array<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u8FF0\u4EE3\u7801\u5148\u662F\u5B9A\u4E49\u4E86\u4E00\u4E2A10\u4F4D\u7684\u6570\u7EC4\uFF0C\u7136\u540E\u5728\u8FD9\u4E2A\u57FA\u7840\u4E0A\u521B\u5EFA\u4E86\u4E00\u4E2A\u5207\u7247\uFF0C\u7136\u540E\u53BB\u6253\u5370\u51FA\u5207\u7247\u7684\u957F\u5EA6\uFF0C\u5BB9\u91CF\u4EE5\u53CA\u5207\u7247\u548C\u6570\u7EC4\u5730\u5740\u662F\u5426\u76F8\u7B49\u3002\u6700\u7EC8\u8F93\u51FA\u7684\u7ED3\u679C\u662F\uFF1A<code>1,5,true</code>\u3002\u6574\u4E2A\u5207\u7247\u53EF\u89C6\u5316\u51FA\u6765\u5E94\u8BE5\u662F\u8FD9\u6837\u7684\uFF1A</p><p><img src="https://golearning.oss-cn-shanghai.aliyuncs.com/obsidian20221001213722.png" alt="" loading="lazy"></p><h2 id="map" tabindex="-1"><a class="header-anchor" href="#map" aria-hidden="true">#</a> Map</h2><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> hmap <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	<span class="token comment">// Note: the format of the hmap is also encoded in cmd/compile/internal/reflectdata/reflect.go.</span>
	<span class="token comment">// Make sure this stays in sync with the compiler&#39;s definition.</span>
	count     <span class="token builtin">int</span> <span class="token comment">// # live cells == size of map.  Must be first (used by len() builtin)</span>
	flags     <span class="token builtin">uint8</span>
	B         <span class="token builtin">uint8</span>  <span class="token comment">// log_2 of # of buckets (can hold up to loadFactor * 2^B items)</span>
	noverflow <span class="token builtin">uint16</span> <span class="token comment">// approximate number of overflow buckets; see incrnoverflow for details</span>
	hash0     <span class="token builtin">uint32</span> <span class="token comment">// hash seed</span>

	buckets    unsafe<span class="token punctuation">.</span>Pointer <span class="token comment">// array of 2^B Buckets. may be nil if count==0.</span>
	oldbuckets unsafe<span class="token punctuation">.</span>Pointer <span class="token comment">// previous bucket array of half the size, non-nil only when growing</span>
	nevacuate  <span class="token builtin">uintptr</span>        <span class="token comment">// progress counter for evacuation (buckets less than this have been evacuated)</span>

	extra <span class="token operator">*</span>mapextra <span class="token comment">// optional fields</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iota" tabindex="-1"><a class="header-anchor" href="#iota" aria-hidden="true">#</a> Iota</h2><h2 id="chan" tabindex="-1"><a class="header-anchor" href="#chan" aria-hidden="true">#</a> Chan</h2>`,14),c=[i];function o(p,l){return s(),a("div",null,c)}var d=n(t,[["render",o],["__file","Goalng \u5E38\u89C1\u6570\u636E\u7ED3\u6784\u5B9E\u73B0\u539F\u7406.html.vue"]]);export{d as default};
