import{_ as o}from"./plugin-vue_export-helper.21dcd24c.js";import{o as c,c as l,a as n,b as a,w as i,e as u,d as s,r as t}from"./app.fda4c147.js";const r={},k=u(`<h1 id="\u5982\u4F55\u7528golang\u5FEB\u901F\u6784\u5EFA\u4E00\u4E2Acli\u5C0F\u5DE5\u517702-\u89E3\u6790\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u7528golang\u5FEB\u901F\u6784\u5EFA\u4E00\u4E2Acli\u5C0F\u5DE5\u517702-\u89E3\u6790\u6587\u4EF6" aria-hidden="true">#</a> \u5982\u4F55\u7528golang\u5FEB\u901F\u6784\u5EFA\u4E00\u4E2ACLI\u5C0F\u5DE5\u517702 - \u89E3\u6790\u6587\u4EF6</h1><p>\u5728\u4E0A\u4E00\u7BC7\u6587\u7AE0\u4E2D\uFF0C\u6211\u4EEC\u6784\u5EFA\u4E86\u4E00\u4E2A\u53EB<code>autoSeletor</code>\u7684\u5B50\u547D\u4EE4\u7528\u6765\u968F\u673A\u9009\u62E9\u6211\u4EEC\u8F93\u5165\u7684\u5B57\u7B26\u6570\u7EC4\u3002\u5728\u8FD9\u7BC7\u4E2D\uFF0C\u6211\u4EEC\u6765\u7ED9\u6211\u4EEC\u7684\u8FD9\u4E2A\u5B50\u547D\u4EE4\u52A0\u70B9\u529F\u80FD -- \u89E3\u6790\u6587\u4EF6\uFF01</p><p>\u6211\u4EEC\u5E0C\u671B\u901A\u8FC7\u6587\u4EF6\u7684\u65B9\u5F0F\u6765\u4F5C\u4E3A\u8F93\u5165\uFF0C\u7136\u540E\u968F\u673A\u9009\u51FA\u6587\u4EF6\u7684\u5185\u5BB9\u3002</p><h2 id="\u5148\u4E0A\u6548\u679C" tabindex="-1"><a class="header-anchor" href="#\u5148\u4E0A\u6548\u679C" aria-hidden="true">#</a> \u5148\u4E0A\u6548\u679C</h2><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u6587\u4EF6\u5185\u5BB9:</span>
<span class="token comment">// \u5B66\u4E60</span>
<span class="token comment">// \u51FA\u53BB\u73A9</span>
<span class="token comment">// \u8D70\u8D70\u8D70</span>

<span class="token operator">&gt;&gt;</span> gtools as <span class="token operator">-</span>f test<span class="token punctuation">.</span>env
\u51FA\u53BB\u73A9
<span class="token operator">&gt;&gt;</span> gtools as <span class="token operator">-</span>f test<span class="token punctuation">.</span>env
\u8D70\u8D70\u8D70
<span class="token operator">&gt;&gt;</span> gtools as <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span>
<span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u6211\u4EEC\u4F7F\u7528\u4E86\u4E00\u4E2A<code>-f</code> \u7684\u6807\u81F4\u6765\u52A0\u8F7D\u8868\u793A\u6211\u4EEC\u5E0C\u671B\u901A\u8FC7\u6587\u4EF6\u7684\u5F62\u5F0F\u6765\u52A0\u8F7D\u5185\u5BB9\uFF0C\u540C\u65F6\u6211\u4EEC\u4E5F\u4FDD\u7559\u539F\u672C\u7684\u76F4\u63A5\u4ECE\u547D\u4EE4\u884C\u8F93\u5165\u7684\u529F\u80FD\u3002\u4E0D\u591Abb\uFF0C\u5F00\u59CB\u7EC6\u8BB2\u4E0B\u6211\u4EEC\u5982\u4F55\u53BB\u5B9E\u73B0\u5427</p><h2 id="\u6DFB\u52A0\u6211\u4EEC\u7684flag" tabindex="-1"><a class="header-anchor" href="#\u6DFB\u52A0\u6211\u4EEC\u7684flag" aria-hidden="true">#</a> \u6DFB\u52A0\u6211\u4EEC\u7684flag</h2><p>\u5728\u6211\u4EEC\u4E4B\u524D\u7684<code>autoSeletor</code> \u5B50\u547D\u4EE4\u521D\u59CB\u5316\u65F6\u6CE8\u518C\u8FDB\u4E00\u4E2A flag \u53EB<code>file</code>\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528<code>--file</code>\u7684\u5F62\u5F0F\u6765\u4F7F\u7528\u8FD9\u4E2Aflag\u8FDB\u884C\u8F93\u5165\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u901A\u8FC7\u77ED\u547D\u4EE4<code>-f</code>\u6765\u4EE3\u66FF<code>--file</code>\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">var</span> autoSelectorCmd <span class="token operator">=</span> <span class="token operator">&amp;</span>cobra<span class="token punctuation">.</span>Command<span class="token punctuation">{</span>
	Use<span class="token punctuation">:</span>     <span class="token string">&quot;autoSelector&quot;</span><span class="token punctuation">,</span>
	Aliases<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;as&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	Short<span class="token punctuation">:</span>   <span class="token string">&quot;randomly select string from a list&quot;</span><span class="token punctuation">,</span>
	Long<span class="token punctuation">:</span>    <span class="token string">\`randomly select string from a list\`</span><span class="token punctuation">,</span>
	Run<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>cmd <span class="token operator">*</span>cobra<span class="token punctuation">.</span>Command<span class="token punctuation">,</span> args <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	  <span class="token comment">// \u901A\u8FC7GetString\u63A5\u53EF\u4EE5\u83B7\u5F97\u6211\u4EEC\u7684flag\u540E\u9762\u7684\u5185\u5BB9\u4E86</span>
		fileFlag<span class="token punctuation">,</span> err <span class="token operator">:=</span> cmd<span class="token punctuation">.</span><span class="token function">Flags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token string">&quot;file&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>


<span class="token keyword">func</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	rootCmd<span class="token punctuation">.</span><span class="token function">AddCommand</span><span class="token punctuation">(</span>autoSelectorCmd<span class="token punctuation">)</span>

	<span class="token comment">// Here you will define your flags and configuration settings.</span>

	<span class="token comment">// Cobra supports Persistent Flags which will work for this command</span>
	<span class="token comment">// and all subcommands, e.g.:</span>
	<span class="token comment">// autoSelectorCmd.PersistentFlags().String(&quot;foo&quot;, &quot;&quot;, &quot;A help for foo&quot;)</span>

	<span class="token comment">// Cobra supports local flags which will only run when this command</span>
	<span class="token comment">// is called directly, e.g.:</span>
	<span class="token comment">// autoSelectorCmd.Flags().BoolP(&quot;toggle&quot;, &quot;t&quot;, false, &quot;Help message for toggle&quot;)</span>
	autoSelectorCmd<span class="token punctuation">.</span><span class="token function">Flags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">StringP</span><span class="token punctuation">(</span><span class="token string">&quot;file&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;f&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;file path&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B9E\u73B0\u6211\u4EEC\u7684\u89E3\u6790\u903B\u8F91\u5427" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u6211\u4EEC\u7684\u89E3\u6790\u903B\u8F91\u5427" aria-hidden="true">#</a> \u5B9E\u73B0\u6211\u4EEC\u7684\u89E3\u6790\u903B\u8F91\u5427</h3><p>\u65E2\u7136\u6211\u4EEC\u7684flag\u5DF2\u7ECF\u62D3\u5C55\u6210\u529F\u4E86\uFF0C\u90A3\u4E48\u6211\u4EEC\u53EF\u4EE5\u5B9E\u73B0\u6211\u4EEC\u7684\u5177\u4F53\u903B\u8F91\u4E86\u3002 \u5728<code>pkg</code>\u5305\u4E0B\u521B\u5EFA\u4E00\u4E2A<code>fileParser.go</code>\u7684\u6587\u4EF6\u6765\u653E\u7F6E\u6211\u4EEC\u7684\u5177\u4F53\u903B\u8F91\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u4E00\u4E2A\u62BD\u8C61\u7684\u63A5\u53E3\uFF0C\u653E\u5728\u8FD9\u8FB9\u4FBF\u4E8E\u540E\u7EED\u62D3\u5C55</span>
<span class="token keyword">type</span> FileParser <span class="token keyword">interface</span> <span class="token punctuation">{</span>
	<span class="token function">Parse</span><span class="token punctuation">(</span>filePath <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> Parser <span class="token keyword">struct</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u4E3B\u8981\u89E3\u6790\u65B9\u6CD5</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>p <span class="token operator">*</span>Parser<span class="token punctuation">)</span> <span class="token function">Parse</span><span class="token punctuation">(</span>filePath <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5224\u65AD\u6587\u4EF6\u662F\u5426\u5B58\u5728</span>
	<span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Stat</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">&quot;file not exist&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
  <span class="token comment">// \u5982\u679C\u5B58\u5728\u5C31\u53BB\u8BFB\u53D6\u6587\u4EF6</span>
	bytesContent<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">&quot;read file error&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

  <span class="token comment">// \u653E\u5230buffer\u91CC</span>
	r <span class="token operator">:=</span> bufio<span class="token punctuation">.</span><span class="token function">NewReader</span><span class="token punctuation">(</span>bytesContent<span class="token punctuation">)</span>
	<span class="token keyword">var</span> chunks <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span>
  
	<span class="token keyword">for</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u9010\u884C\u53BB\u89E3\u6790</span>
		line<span class="token punctuation">,</span> <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">ReadLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">break</span>
		<span class="token punctuation">}</span>
		chunks <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>chunks<span class="token punctuation">,</span> <span class="token function">string</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> chunks<span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">NewParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>Parser <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token operator">&amp;</span>Parser<span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5C06\u6211\u4EEC\u7684\u903B\u8F91\u96C6\u6210\u5230\u547D\u4EE4\u884C\u5427" tabindex="-1"><a class="header-anchor" href="#\u5C06\u6211\u4EEC\u7684\u903B\u8F91\u96C6\u6210\u5230\u547D\u4EE4\u884C\u5427" aria-hidden="true">#</a> \u5C06\u6211\u4EEC\u7684\u903B\u8F91\u96C6\u6210\u5230\u547D\u4EE4\u884C\u5427</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">var</span> autoSelectorCmd <span class="token operator">=</span> <span class="token operator">&amp;</span>cobra<span class="token punctuation">.</span>Command<span class="token punctuation">{</span>
	Use<span class="token punctuation">:</span>     <span class="token string">&quot;autoSelector&quot;</span><span class="token punctuation">,</span>
	Aliases<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;as&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	Short<span class="token punctuation">:</span>   <span class="token string">&quot;randomly select string from a list&quot;</span><span class="token punctuation">,</span>
	Long<span class="token punctuation">:</span>    <span class="token string">\`randomly select string from a list\`</span><span class="token punctuation">,</span>
	Run<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span>cmd <span class="token operator">*</span>cobra<span class="token punctuation">.</span>Command<span class="token punctuation">,</span> args <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BFB\u53D6flag</span>
		fileFlag<span class="token punctuation">,</span> err <span class="token operator">:=</span> cmd<span class="token punctuation">.</span><span class="token function">Flags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span><span class="token string">&quot;file&quot;</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			cmd<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;go error when parse file flag&quot;</span><span class="token punctuation">)</span>
			os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u662F\u6587\u4EF6\u8BFB\u53D6\u7684\u6A21\u5F0F\u8BDD\uFF0C\u5C31\u53BB\u89E3\u6790\u6587\u4EF6</span>
		<span class="token keyword">if</span> fileFlag <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
			parser <span class="token operator">:=</span> file_parser<span class="token punctuation">.</span><span class="token function">NewParser</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			args<span class="token punctuation">,</span> err <span class="token operator">=</span> parser<span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>fileFlag<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u90FD\u4E0D\u662F\uFF0C\u5C31\u7ED3\u675F</span>
		<span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> fileFlag <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
			cmd<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;please input a list of string or file path&quot;</span><span class="token punctuation">)</span>
			os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
    <span class="token comment">// \u4E3B\u8981\u7684\u89E3\u6790</span>
		res<span class="token punctuation">,</span> err <span class="token operator">:=</span> auto_selector<span class="token punctuation">.</span><span class="token function">AutoSelect</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			cmd<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;got error: &quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
			os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
			cmd<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u81F3\u6B64\uFF0C\u6211\u4EEC\u7684\u62D3\u5C55\u5C31\u7ED3\u675F\u5566~\uFF0C\u6784\u5EFA\u4E00\u628A\uFF0C\u76F4\u63A5\u8D77\u98DE\u4F7F\u7528\uFF01</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">go</span> build <span class="token operator">-</span>o gtools
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,16),d=s("\u4EE3\u7801\u4ED3\u5E93\uFF1A "),v={href:"https://github.com/819110812/GoCommandTools",target:"_blank",rel:"noopener noreferrer"},m=s("https://github.com/819110812/GoCommandTools"),b=s("\u4E2A\u4EBA\u535A\u5BA2\u5730\u5740\uFF1A"),g=s("https://doraemonabcd.xyz/"),f=n("p",null,[n("img",{src:"https://golearning.oss-cn-shanghai.aliyuncs.com/obsidian\u626B\u7801_\u641C\u7D22\u8054\u5408\u4F20\u64AD\u6837\u5F0F-\u6807\u51C6\u8272\u7248.png",alt:"",loading:"lazy"})],-1);function h(_,q){const p=t("ExternalLinkIcon"),e=t("RouterLink");return c(),l("div",null,[k,n("p",null,[d,n("a",v,[m,a(p)])]),n("p",null,[b,a(e,{to:"/go/%5Bhttps:/doraemonabcd.xyz/"},{default:i(()=>[g]),_:1})]),f])}var x=o(r,[["render",h],["__file","\u5982\u4F55\u7528golang\u5FEB\u901F\u6784\u5EFA\u4E00\u4E2ACLI\u5C0F\u5DE5\u517702-\u89E3\u6790\u6587\u4EF6.html.vue"]]);export{x as default};
