import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,e}from"./app.95a3fccd.js";const p={},o=e(`<h2 id="leetcode\u5237\u989812-\u56DE\u6587\u6570" tabindex="-1"><a class="header-anchor" href="#leetcode\u5237\u989812-\u56DE\u6587\u6570" aria-hidden="true">#</a> Leetcode\u5237\u989812\uFF1A\u56DE\u6587\u6570</h2><p>\u5224\u65AD\u4E00\u4E2A\u6574\u6570\u662F\u5426\u662F\u56DE\u6587\u6570\u3002\u56DE\u6587\u6570\u662F\u6307\u6B63\u5E8F\uFF08\u4ECE\u5DE6\u5411\u53F3\uFF09\u548C\u5012\u5E8F\uFF08\u4ECE\u53F3\u5411\u5DE6\uFF09\u8BFB\u90FD\u662F\u4E00\u6837\u7684\u6574\u6570\u3002</p><p>\u793A\u4F8B 1:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165: 121
\u8F93\u51FA: true
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u793A\u4F8B 2:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165: -121
\u8F93\u51FA: false
\u89E3\u91CA: \u4ECE\u5DE6\u5411\u53F3\u8BFB, \u4E3A -121 \u3002 \u4ECE\u53F3\u5411\u5DE6\u8BFB, \u4E3A 121- \u3002\u56E0\u6B64\u5B83\u4E0D\u662F\u4E00\u4E2A\u56DE\u6587\u6570\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u793A\u4F8B 3:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165: 10
\u8F93\u51FA: false
\u89E3\u91CA: \u4ECE\u53F3\u5411\u5DE6\u8BFB, \u4E3A 01 \u3002\u56E0\u6B64\u5B83\u4E0D\u662F\u4E00\u4E2A\u56DE\u6587\u6570\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u65B9\u6CD51\uFF1A \u5404\u79CD\u7C7B\u578B\u8F6C\u6362\uFF0C\u4F53\u73B0python\u5185\u7F6E\u51FD\u6570\u7684\u5F3A\u5927\uFF0C\u4F46\u662F\u8FD0\u884C\u65F6\u95F4\u548C\u5185\u5B58\u6D88\u8017\u4F1A\u5F88\u4E25\u91CD\uFF0C\u6BD5\u7ADF\u6BCF\u4E2A\u51FD\u6570\u80CC\u540E\u90FD\u662F\u6EE1\u6EE1\u7684\u635F\u8017\u554A\uFF0C\u968F\u624B\u4E00\u5199\uFF0C\u6CA1\u6709\u8003\u8651\u5F88\u591A\uFF0C\u4E0D\u8D5E\u6210\u8FD9\u79CD\u5199\u6CD5\uFF0C\u5F88\u4E0D\u4F18\u96C5</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">isPalindrome</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">bool</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">True</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u65B9\u6CD52\uFF1A</p><p>\u4ED4\u7EC6\u5206\u6790\u4E00\u4E0B\u9898\u76EE\uFF0C\u53EF\u4EE5\u770B\u51FA\uFF0C\u5F53\u8F93\u5165\u7684\u662F\u8D1F\u6570\u662F\u53EF\u4EE5\u63D0\u524D\u7ED3\u675F\uFF0C\u6240\u4EE5 <code>x&lt;0</code> \u65F6\u53EF\u4EE5\u76F4\u63A5\u8FD4\u56DE<code>False</code>.\u540C\u65F6\uFF0C\u5F53\u5C3E\u6570\u662F0\u7684\u65F6\u5019\uFF0C\u4E5F\u662F\`\`False\`\u3002\u7531\u6B64\u53EF\u4EE5\u5199\u51FA\u63D0\u524D\u7ED3\u675F\u6761\u4EF6\u4E3A\uFF1A</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">if</span> x<span class="token operator">&lt;</span><span class="token number">0</span> <span class="token keyword">or</span> <span class="token punctuation">(</span>x<span class="token operator">%</span><span class="token number">10</span><span class="token operator">==</span><span class="token number">0</span> <span class="token keyword">and</span> x<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">return</span> <span class="token boolean">False</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u63A5\u4E0B\u6765\u5C31\u662F\u5C06\u6570\u5B57\u8FDB\u884C\u56DE\u6587\u5904\u7406\uFF0C\u8FD9\u8FB9\u8981\u6CE8\u610F\u7684\u5C31\u662F\u5224\u65AD<code>True</code>\u7684\u65F6\u5019\u8981\u8003\u8651\u539F\u59CB\u7684\u6574\u6570\u662F\u5947\u6570\u4E2A\u6570\u5B57\u8FD8\u662F\u5076\u6570\u4E2A\u6570\u5B57\uFF0C\u56E0\u4E3A\u6211\u4EEC\u8981\u5C06\u6570\u5B57\u8FDB\u884C\u4E00\u534A\u7684\u7FFB\u8F6C\uFF0C\u5947\u6570\u4E2A\u548C\u5076\u6570\u4E2A\u4F1A\u76F8\u5DEE\u4EE5\u4E3A\uFF0C\u6240\u4EE5\u6700\u540E\u7684\u65F6\u5019\u6211\u4EEC\u8981\u5224\u65AD\u4E24\u79CD\u60C5\u51B5\uFF0C\u4E00\u4E2A\u662F<code>reversed == x</code> \u53E6\u4E00\u4E2A\u5C31\u662F\u5C06\u7FFB\u8F6C\u540E\u7684\u6570\u53BB\u6389\u4E00\u4F4D <code>x==reversed//10</code>.</p><p>\u8FD9\u8FB9\u8FD8\u6709\u4E00\u70B9\u5C31\u662F\uFF0C\u6211\u4EEC\u7528\u7684\u662F<code>//</code>\u800C\u4E0D\u662F<code>/</code>\uFF0C\u524D\u8005\u662F\u6574\u6570\u9664\uFF0C\u540E\u8005\u662F\u6D6E\u70B9\u9664\uFF0C\u7ED3\u679C\u662F\u4E0D\u4E00\u6837\u7684\u3002\u5B8C\u6574\u7684\u4EE3\u7801\u662F</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">isPalindrome</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">bool</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> x <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token keyword">or</span> <span class="token punctuation">(</span>x <span class="token operator">%</span> <span class="token number">10</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">and</span> x <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">return</span> <span class="token boolean">False</span> 
        <span class="token keyword">if</span> x<span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span> <span class="token keyword">return</span> <span class="token boolean">True</span>    
        reserved <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">while</span> x <span class="token operator">&gt;</span> reserved<span class="token punctuation">:</span>
            reserved <span class="token operator">=</span> reserved<span class="token operator">*</span><span class="token number">10</span> <span class="token operator">+</span> x<span class="token operator">%</span><span class="token number">10</span>
            x <span class="token operator">=</span> x<span class="token operator">//</span><span class="token number">10</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>reserved<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
        <span class="token keyword">return</span> x <span class="token operator">==</span> reserved <span class="token keyword">or</span> x <span class="token operator">==</span> reserved <span class="token operator">//</span> <span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6B21\u7684\u8FD0\u884C\u65F6\u95F4\u4F1A\u6BD4\u4E0A\u9762\u7684\u597D\u4E0A\u5F88\u591A\u3002</p>`,17),t=[o];function l(c,r){return s(),a("div",null,t)}var u=n(p,[["render",l],["__file","Leetcode\u5237\u989812\uFF1A\u56DE\u6587\u6570.html.vue"]]);export{u as default};
